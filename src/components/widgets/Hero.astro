---
import HeroImage from '~/components/common/HeroImage.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  image?: string | any; // TODO: find HTMLElementProps
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  image = await Astro.slots.render('image'),
} = Astro.props;
---

<section class="relative" {...id ? { id } : {}}>
    <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
    <div class="relative bg-gray-900 bg-opacity-55">
      <div class="px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-36">
        <div class="flex flex-col items-center justify-between xl:flex-row">
          <div class="w-full max-w-xl mb-12 xl:mb-0 xl:pr-16 xl:w-7/12">
            {
              tagline && (
                <p
                class="text-base text-white font-bold tracking-wide uppercase"
                set:html={tagline}
                />
                )
              }
          {
            title && (
              <h1
              class="text-3xl md:text-4xl font-bold leading-tighter tracking-tighter mb-4 font-heading text-white"
              set:html={title}
              />
              )
            }
        
            {subtitle && <p class="text-xl text-white mb-6" set:html={subtitle} />}
            {
              actions && (
                <div class="max-w-xs sm:max-w-md flex flex-nowrap flex-col sm:flex-row">
                  {Array.isArray(actions) ? (
                    actions.map((action) => (
                    <div class="inline-flex items-center font-semibold tracking-wider">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                      </div>
                      ))
                      ) : (
                        <Fragment set:html={actions} />
                        )}
                        </div>
                        )
            }
          
            {content && <Fragment set:html={content} />}
          </div>
        </div>
      </div>
    </div>
      {
        image && (
          <HeroImage
            {...image}
          />
        )
      }
</section>

