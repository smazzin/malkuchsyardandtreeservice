---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
import Image from '~/components/common/Image.astro';
import type { Services as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  services = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`bg-neutral-100 ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="container">
		<div class="grid auto-cols-fr gap-6 md:gap-8 lg:grid-flow-col lg:grid-cols-3 lg:grid-rows-2">
			{
				services &&
					services.map(({ tagline, title, service, serviceLink, image }) => (
						<div>
							{serviceLink && (
							<Button variant="link" href={serviceLink} class="grid auto-cols-fr grid-cols-1 border border-border-primary shadow-lg last-of-type:row-span-2 last-of-type:flex last-of-type:flex-col sm:grid-cols-2 lg:col-span-2 lg:last-of-type:col-span-1">
									{image && (
										<div class="flex size-full flex-col items-center justify-center self-start lg:h-auto">
											{typeof image === 'string' ? (
												<Fragment set:html={image} />
											) : (
												<Image
													class="image"
													width={304}
													height={171}
													widths={[400, 768]}
													layout="responsive"
													{...image}
												/>
											)}
										</div>
									)}
								<div class="block p-6 last-of-type:flex-1 sm:flex sm:flex-col sm:justify-center md:p-2">
									{tagline && <p class="mb-2 text-primary text-sm font-semibold">{tagline}</p>}
									{title && <h3 class="mb-3 text-accent font-bold md:mb-2 md:leading-[1.3] text-lg">{title}</h3>}
									{service && (
										<p class="">{service}</p>
									)}
								</div>
							</Button>
							)}
						</div>
					))
			}
		</div>
  </div>
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>